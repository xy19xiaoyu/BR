#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ExtractData")]
	public partial class enDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertDocInfo(DocInfo instance);
    partial void UpdateDocInfo(DocInfo instance);
    partial void DeleteDocInfo(DocInfo instance);
    partial void Inserten(en instance);
    partial void Updateen(en instance);
    partial void Deleteen(en instance);
    partial void Inserten_ipc(en_ipc instance);
    partial void Updateen_ipc(en_ipc instance);
    partial void Deleteen_ipc(en_ipc instance);
    partial void Inserten_pa(en_pa instance);
    partial void Updateen_pa(en_pa instance);
    partial void Deleteen_pa(en_pa instance);
    partial void InsertIpc(Ipc instance);
    partial void UpdateIpc(Ipc instance);
    partial void DeleteIpc(Ipc instance);
    #endregion
		
		public enDataContext() : 
				base(global::BRDB.Properties.Settings.Default.ExtractDataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public enDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public enDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DocInfo> DocInfo
		{
			get
			{
				return this.GetTable<DocInfo>();
			}
		}
		
		public System.Data.Linq.Table<en> en
		{
			get
			{
				return this.GetTable<en>();
			}
		}
		
		public System.Data.Linq.Table<en_ipc> en_ipc
		{
			get
			{
				return this.GetTable<en_ipc>();
			}
		}
		
		public System.Data.Linq.Table<en_pa> en_pa
		{
			get
			{
				return this.GetTable<en_pa>();
			}
		}
		
		public System.Data.Linq.Table<Ipc> Ipc
		{
			get
			{
				return this.GetTable<Ipc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocInfo")]
	public partial class DocInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _DocId;
		
		private string _PubID;
		
		private string _PubDate;
		
		private string _AppNo;
		
		private string _AppDate;
		
		private string _Applicants;
		
		private string _ApplicantCountry;
		
		private string _Inventors;
		
		private string _Title;
		
		private string _Abstract;
		
		private string _PubNo;
		
		private string _OriginalAppNo;
		
		private string _DocdbAppNo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDocIdChanging(long value);
    partial void OnDocIdChanged();
    partial void OnPubIDChanging(string value);
    partial void OnPubIDChanged();
    partial void OnPubDateChanging(string value);
    partial void OnPubDateChanged();
    partial void OnAppNoChanging(string value);
    partial void OnAppNoChanged();
    partial void OnAppDateChanging(string value);
    partial void OnAppDateChanged();
    partial void OnApplicantsChanging(string value);
    partial void OnApplicantsChanged();
    partial void OnApplicantCountryChanging(string value);
    partial void OnApplicantCountryChanged();
    partial void OnInventorsChanging(string value);
    partial void OnInventorsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnPubNoChanging(string value);
    partial void OnPubNoChanged();
    partial void OnOriginalAppNoChanging(string value);
    partial void OnOriginalAppNoChanged();
    partial void OnDocdbAppNoChanging(string value);
    partial void OnDocdbAppNoChanged();
    #endregion
		
		public DocInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="BigInt NOT NULL")]
		public long DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this.OnDocIdChanging(value);
					this.SendPropertyChanging();
					this._DocId = value;
					this.SendPropertyChanged("DocId");
					this.OnDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubID", DbType="NVarChar(50)")]
		public string PubID
		{
			get
			{
				return this._PubID;
			}
			set
			{
				if ((this._PubID != value))
				{
					this.OnPubIDChanging(value);
					this.SendPropertyChanging();
					this._PubID = value;
					this.SendPropertyChanged("PubID");
					this.OnPubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="NVarChar(20)")]
		public string PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this.OnPubDateChanging(value);
					this.SendPropertyChanging();
					this._PubDate = value;
					this.SendPropertyChanged("PubDate");
					this.OnPubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppNo", DbType="NVarChar(50)")]
		public string AppNo
		{
			get
			{
				return this._AppNo;
			}
			set
			{
				if ((this._AppNo != value))
				{
					this.OnAppNoChanging(value);
					this.SendPropertyChanging();
					this._AppNo = value;
					this.SendPropertyChanged("AppNo");
					this.OnAppNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppDate", DbType="NVarChar(20)")]
		public string AppDate
		{
			get
			{
				return this._AppDate;
			}
			set
			{
				if ((this._AppDate != value))
				{
					this.OnAppDateChanging(value);
					this.SendPropertyChanging();
					this._AppDate = value;
					this.SendPropertyChanged("AppDate");
					this.OnAppDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applicants", DbType="NVarChar(MAX)")]
		public string Applicants
		{
			get
			{
				return this._Applicants;
			}
			set
			{
				if ((this._Applicants != value))
				{
					this.OnApplicantsChanging(value);
					this.SendPropertyChanging();
					this._Applicants = value;
					this.SendPropertyChanged("Applicants");
					this.OnApplicantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantCountry", DbType="NVarChar(100)")]
		public string ApplicantCountry
		{
			get
			{
				return this._ApplicantCountry;
			}
			set
			{
				if ((this._ApplicantCountry != value))
				{
					this.OnApplicantCountryChanging(value);
					this.SendPropertyChanging();
					this._ApplicantCountry = value;
					this.SendPropertyChanged("ApplicantCountry");
					this.OnApplicantCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventors", DbType="NVarChar(MAX)")]
		public string Inventors
		{
			get
			{
				return this._Inventors;
			}
			set
			{
				if ((this._Inventors != value))
				{
					this.OnInventorsChanging(value);
					this.SendPropertyChanging();
					this._Inventors = value;
					this.SendPropertyChanged("Inventors");
					this.OnInventorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstract", DbType="NVarChar(MAX)")]
		public string Abstract
		{
			get
			{
				return this._Abstract;
			}
			set
			{
				if ((this._Abstract != value))
				{
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubNo", DbType="NVarChar(50)")]
		public string PubNo
		{
			get
			{
				return this._PubNo;
			}
			set
			{
				if ((this._PubNo != value))
				{
					this.OnPubNoChanging(value);
					this.SendPropertyChanging();
					this._PubNo = value;
					this.SendPropertyChanged("PubNo");
					this.OnPubNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalAppNo", DbType="NVarChar(50)")]
		public string OriginalAppNo
		{
			get
			{
				return this._OriginalAppNo;
			}
			set
			{
				if ((this._OriginalAppNo != value))
				{
					this.OnOriginalAppNoChanging(value);
					this.SendPropertyChanging();
					this._OriginalAppNo = value;
					this.SendPropertyChanged("OriginalAppNo");
					this.OnOriginalAppNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocdbAppNo", DbType="NVarChar(50)")]
		public string DocdbAppNo
		{
			get
			{
				return this._DocdbAppNo;
			}
			set
			{
				if ((this._DocdbAppNo != value))
				{
					this.OnDocdbAppNoChanging(value);
					this.SendPropertyChanging();
					this._DocdbAppNo = value;
					this.SendPropertyChanged("DocdbAppNo");
					this.OnDocdbAppNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.en")]
	public partial class en : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pn;
		
		private string _an;
		
		private string _p_c;
		
		private string _i_c;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpnChanging(string value);
    partial void OnpnChanged();
    partial void OnanChanging(string value);
    partial void OnanChanged();
    partial void Onp_cChanging(string value);
    partial void Onp_cChanged();
    partial void Oni_cChanging(string value);
    partial void Oni_cChanged();
    #endregion
		
		public en()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn", DbType="VarChar(20)")]
		public string pn
		{
			get
			{
				return this._pn;
			}
			set
			{
				if ((this._pn != value))
				{
					this.OnpnChanging(value);
					this.SendPropertyChanging();
					this._pn = value;
					this.SendPropertyChanged("pn");
					this.OnpnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_an", DbType="VarChar(20)")]
		public string an
		{
			get
			{
				return this._an;
			}
			set
			{
				if ((this._an != value))
				{
					this.OnanChanging(value);
					this.SendPropertyChanging();
					this._an = value;
					this.SendPropertyChanged("an");
					this.OnanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_c", DbType="Char(2)")]
		public string p_c
		{
			get
			{
				return this._p_c;
			}
			set
			{
				if ((this._p_c != value))
				{
					this.Onp_cChanging(value);
					this.SendPropertyChanging();
					this._p_c = value;
					this.SendPropertyChanged("p_c");
					this.Onp_cChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_c", DbType="Char(2)")]
		public string i_c
		{
			get
			{
				return this._i_c;
			}
			set
			{
				if ((this._i_c != value))
				{
					this.Oni_cChanging(value);
					this.SendPropertyChanging();
					this._i_c = value;
					this.SendPropertyChanged("i_c");
					this.Oni_cChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.en_ipc")]
	public partial class en_ipc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pn;
		
		private string _ipc;
		
		private System.Nullable<char> _ipc1;
		
		private string _ipc3;
		
		private string _ipc4;
		
		private string _ipc7;
		
		private System.Nullable<int> _sort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpnChanging(string value);
    partial void OnpnChanged();
    partial void OnipcChanging(string value);
    partial void OnipcChanged();
    partial void Onipc1Changing(System.Nullable<char> value);
    partial void Onipc1Changed();
    partial void Onipc3Changing(string value);
    partial void Onipc3Changed();
    partial void Onipc4Changing(string value);
    partial void Onipc4Changed();
    partial void Onipc7Changing(string value);
    partial void Onipc7Changed();
    partial void OnsortChanging(System.Nullable<int> value);
    partial void OnsortChanged();
    #endregion
		
		public en_ipc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn", DbType="VarChar(13)")]
		public string pn
		{
			get
			{
				return this._pn;
			}
			set
			{
				if ((this._pn != value))
				{
					this.OnpnChanging(value);
					this.SendPropertyChanging();
					this._pn = value;
					this.SendPropertyChanged("pn");
					this.OnpnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipc", DbType="VarChar(15)")]
		public string ipc
		{
			get
			{
				return this._ipc;
			}
			set
			{
				if ((this._ipc != value))
				{
					this.OnipcChanging(value);
					this.SendPropertyChanging();
					this._ipc = value;
					this.SendPropertyChanged("ipc");
					this.OnipcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipc1", DbType="Char(1)")]
		public System.Nullable<char> ipc1
		{
			get
			{
				return this._ipc1;
			}
			set
			{
				if ((this._ipc1 != value))
				{
					this.Onipc1Changing(value);
					this.SendPropertyChanging();
					this._ipc1 = value;
					this.SendPropertyChanged("ipc1");
					this.Onipc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipc3", DbType="VarChar(3)")]
		public string ipc3
		{
			get
			{
				return this._ipc3;
			}
			set
			{
				if ((this._ipc3 != value))
				{
					this.Onipc3Changing(value);
					this.SendPropertyChanging();
					this._ipc3 = value;
					this.SendPropertyChanged("ipc3");
					this.Onipc3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipc4", DbType="VarChar(5)")]
		public string ipc4
		{
			get
			{
				return this._ipc4;
			}
			set
			{
				if ((this._ipc4 != value))
				{
					this.Onipc4Changing(value);
					this.SendPropertyChanging();
					this._ipc4 = value;
					this.SendPropertyChanged("ipc4");
					this.Onipc4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipc7", DbType="VarChar(7)")]
		public string ipc7
		{
			get
			{
				return this._ipc7;
			}
			set
			{
				if ((this._ipc7 != value))
				{
					this.Onipc7Changing(value);
					this.SendPropertyChanging();
					this._ipc7 = value;
					this.SendPropertyChanged("ipc7");
					this.Onipc7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int")]
		public System.Nullable<int> sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.en_pa")]
	public partial class en_pa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pn;
		
		private string _pa;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpnChanging(string value);
    partial void OnpnChanged();
    partial void OnpaChanging(string value);
    partial void OnpaChanged();
    #endregion
		
		public en_pa()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pn", DbType="VarChar(20)")]
		public string pn
		{
			get
			{
				return this._pn;
			}
			set
			{
				if ((this._pn != value))
				{
					this.OnpnChanging(value);
					this.SendPropertyChanging();
					this._pn = value;
					this.SendPropertyChanged("pn");
					this.OnpnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pa", DbType="VarChar(100)")]
		public string pa
		{
			get
			{
				return this._pa;
			}
			set
			{
				if ((this._pa != value))
				{
					this.OnpaChanging(value);
					this.SendPropertyChanging();
					this._pa = value;
					this.SendPropertyChanged("pa");
					this.OnpaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ipc")]
	public partial class Ipc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _PubID;
		
		private int _Sequence;
		
		private string _IPC1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPubIDChanging(string value);
    partial void OnPubIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnIPC1Changing(string value);
    partial void OnIPC1Changed();
    #endregion
		
		public Ipc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PubID
		{
			get
			{
				return this._PubID;
			}
			set
			{
				if ((this._PubID != value))
				{
					this.OnPubIDChanging(value);
					this.SendPropertyChanging();
					this._PubID = value;
					this.SendPropertyChanged("PubID");
					this.OnPubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IPC", Storage="_IPC1", DbType="NVarChar(100)")]
		public string IPC1
		{
			get
			{
				return this._IPC1;
			}
			set
			{
				if ((this._IPC1 != value))
				{
					this.OnIPC1Changing(value);
					this.SendPropertyChanging();
					this._IPC1 = value;
					this.SendPropertyChanged("IPC1");
					this.OnIPC1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
